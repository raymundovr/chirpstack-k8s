apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-initdb
data:
  0001-init-chirpstack.sh: |
    #!/bin/bash
    set -e

    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
        create role chirpstack with login password 'chirpstack';
        create database chirpstack with owner chirpstack;
    EOSQL
  002-chirpstack_extensions.sh: |
    #!/bin/bash
    set -e

    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname="chirpstack" <<-EOSQL
        create extension pg_trgm;
        create extension hstore;
    EOSQL
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers:
        - name: init-permissions
          image: busybox
          command: ['sh', '-c', 'cp /config/*.sh /scripts/ && chmod +x /scripts/*.sh']
          volumeMounts:
            - name: postgres-initdb
              mountPath: /config
            - name: script-volume
              mountPath: /scripts
      containers:
        - name: postgres
          image: postgres:14-alpine
          env:
            - name: POSTGRES_PASSWORD
              value: "root" #TODO: Make this a secret
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: script-volume
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: postgres-initdb
          configMap:
            name: postgres-initdb
        - name: script-volume
          emptyDir: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: levv-durable-storage
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
